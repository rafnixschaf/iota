(function() {var implementors = {
"iota_common":[["impl&lt;'a, K: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>, V: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"iota_common/sync/notify_read/struct.Registration.html\" title=\"struct iota_common::sync::notify_read::Registration\">Registration</a>&lt;'a, K, V&gt;"]],
"iota_faucet":[["impl&lt;Res&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"iota_faucet/metrics_layer/struct.RequestMetricsFuture.html\" title=\"struct iota_faucet::metrics_layer::RequestMetricsFuture\">RequestMetricsFuture</a>&lt;Res&gt;"]],
"iota_metrics":[["impl&lt;'a, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"iota_metrics/struct.GaugeGuardFuture.html\" title=\"struct iota_metrics::GaugeGuardFuture\">GaugeGuardFuture</a>&lt;'a, F&gt;"],["impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"iota_metrics/struct.CancelMonitor.html\" title=\"struct iota_metrics::CancelMonitor\">CancelMonitor</a>&lt;F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>,</div>"],["impl&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"iota_metrics/struct.MonitoredScopeFuture.html\" title=\"struct iota_metrics::MonitoredScopeFuture\">MonitoredScopeFuture</a>&lt;F&gt;"]],
"iota_network_stack":[["impl&lt;Fut, B, E, ResponseHandlerT&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"iota_network_stack/callback/struct.ResponseFuture.html\" title=\"struct iota_network_stack::callback::ResponseFuture\">ResponseFuture</a>&lt;Fut, ResponseHandlerT&gt;<div class=\"where\">where\n    Fut: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.80.1/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.80.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Response&lt;B&gt;, E&gt;&gt;,\n    ResponseHandlerT: <a class=\"trait\" href=\"iota_network_stack/callback/trait.ResponseHandler.html\" title=\"trait iota_network_stack::callback::ResponseHandler\">ResponseHandler</a>,</div>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()