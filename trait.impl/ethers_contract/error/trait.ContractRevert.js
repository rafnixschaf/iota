(function() {var implementors = {
"iota_bridge":[["impl ContractRevert for <a class=\"enum\" href=\"iota_bridge/abi/eth_bridge_committee/enum.EthBridgeCommitteeErrors.html\" title=\"enum iota_bridge::abi::eth_bridge_committee::EthBridgeCommitteeErrors\">EthBridgeCommitteeErrors</a>"],["impl ContractRevert for <a class=\"enum\" href=\"iota_bridge/abi/eth_bridge_config/enum.EthBridgeConfigErrors.html\" title=\"enum iota_bridge::abi::eth_bridge_config::EthBridgeConfigErrors\">EthBridgeConfigErrors</a>"],["impl ContractRevert for <a class=\"enum\" href=\"iota_bridge/abi/eth_bridge_limiter/enum.EthBridgeLimiterErrors.html\" title=\"enum iota_bridge::abi::eth_bridge_limiter::EthBridgeLimiterErrors\">EthBridgeLimiterErrors</a>"],["impl ContractRevert for <a class=\"enum\" href=\"iota_bridge/abi/eth_bridge_vault/enum.EthBridgeVaultErrors.html\" title=\"enum iota_bridge::abi::eth_bridge_vault::EthBridgeVaultErrors\">EthBridgeVaultErrors</a>"],["impl ContractRevert for <a class=\"enum\" href=\"iota_bridge/abi/eth_committee_upgradeable_contract/enum.EthCommitteeUpgradeableContractErrors.html\" title=\"enum iota_bridge::abi::eth_committee_upgradeable_contract::EthCommitteeUpgradeableContractErrors\">EthCommitteeUpgradeableContractErrors</a>"],["impl ContractRevert for <a class=\"enum\" href=\"iota_bridge/abi/eth_erc20/enum.EthERC20Errors.html\" title=\"enum iota_bridge::abi::eth_erc20::EthERC20Errors\">EthERC20Errors</a>"],["impl ContractRevert for <a class=\"enum\" href=\"iota_bridge/abi/eth_iota_bridge/enum.EthIotaBridgeErrors.html\" title=\"enum iota_bridge::abi::eth_iota_bridge::EthIotaBridgeErrors\">EthIotaBridgeErrors</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()