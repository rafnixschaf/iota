(function() {var implementors = {
"iota_move_build":[["impl GetModule for <a class=\"struct\" href=\"iota_move_build/struct.CompiledPackage.html\" title=\"struct iota_move_build::CompiledPackage\">CompiledPackage</a>"]],
"iota_transactional_test_runner":[["impl&lt;'a&gt; GetModule for &amp;'a <a class=\"struct\" href=\"iota_transactional_test_runner/test_adapter/struct.IotaTestAdapter.html\" title=\"struct iota_transactional_test_runner::test_adapter::IotaTestAdapter\">IotaTestAdapter</a>"]],
"iota_types":[["impl GetModule for <a class=\"struct\" href=\"iota_types/in_memory_storage/struct.InMemoryStorage.html\" title=\"struct iota_types::in_memory_storage::InMemoryStorage\">InMemoryStorage</a>"],["impl&lt;R&gt; GetModule for <a class=\"struct\" href=\"iota_types/inner_temporary_store/struct.TemporaryModuleResolver.html\" title=\"struct iota_types::inner_temporary_store::TemporaryModuleResolver\">TemporaryModuleResolver</a>&lt;'_, R&gt;<div class=\"where\">where\n    R: GetModule&lt;Item = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.80.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;CompiledModule&gt;, Error = <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.89/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;,</div>"]],
"simulacrum":[["impl GetModule for <a class=\"struct\" href=\"simulacrum/store/in_mem_store/struct.InMemoryStore.html\" title=\"struct simulacrum::store::in_mem_store::InMemoryStore\">InMemoryStore</a>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()