searchState.loadedDescShard("iota_keys", 0, "Ed25519 follows SLIP-0010 using hardened path: m/44’/4218…\nRead from file as Base64 encoded <code>privkey</code> and return a …\nRead an IotaKeyPair from a file. The content could be any …\nRead from file as Bech32 encoded <code>flag || privkey</code> and …\nRead from file as Base64 encoded <code>flag || privkey</code> and …\nWrite Base64 encoded <code>privkey</code> to file.\nWrite Bech32 encoded <code>flag || privkey</code> to file.\nCheck if an alias exists by its name\nCheck if an alias exists by its name\nReturn an array of <code>Alias</code>, consisting of every alias and its\nGet all aliases objects\nReturn an array of <code>Alias</code>, consisting of every alias and its\nThis function returns an error if the provided alias …\nThis function returns an error if the provided alias …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the address by its alias\nGet the address by its alias\nGet alias of address\nGet alias of address\nGet the alias if it exists, or return an error if it does …\nGet alias of address\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKeys saved as Base64 with 33 bytes <code>flag || privkey</code> …\n<code>ToString::to_string</code>, but without panic on OOM.\nUpdates an old alias to the new alias and saves it to the …\nUpdates an old alias to the new alias. If the new_alias is …\nReturn a random name formatted as first-second from a list …\nReturn a unique collection of names.")