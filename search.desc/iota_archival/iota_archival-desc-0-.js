searchState.loadedDescShard("iota_archival", 0, "Checkpoints and summaries are persisted as blob files. …\nComputes the SHA3 checksum of the Manifest and writes it …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads the manifest file from the store.\nReads the manifest file from the given byte vector and …\nLoads and stores states from genesis then verifies and …\nVerifies the archive store by reading the checkpoints from …\nWrites the Manifest to the remote store.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn latest available checkpoint in archive\nLoad checkpoints+txns+effects from archive into the input …\nLoad given list of checkpoints from archive into the input …\nLoad checkpoints from archive into the input store <code>S</code> for …\nSyncs the Manifest from remote store.\nThis function downloads summary and content files and …\nThis function verifies that the files in archive cover the …\nArchiveWriter archives history by tailing checkpoints …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInitializes the ArchiveWriter from the state of the remote …")