searchState.loadedDescShard("iota_genesis_builder", 0, "Local uncompressed file.\nRemote file (S3) with gzip compressed file\nThe URLs to download Iota object snapshot.\nCustom migration snapshot for testing purposes.\nChecks if the genesis to be built has no migration or if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>stardust</code> module incorporates all the logic necessary …\nConvert to a reader.\nConvert a gzip decoder to read the compressed object …\nReturns the Iota object snapshot download URL.\n<code>ToString::to_string</code>, but without panic on OOM.\nValidates the entire state of the build, no matter what …\nSet the <code>TokenDistributionSchedule</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>native_token</code> module incorporates all the logic …\nTypes and logic to parse a full Stardust snapshot.\nAn alias for representing the timestamp of a Timelock\nWe fix the protocol version used in the migration.\nThe orchestrator of the migration process.\nAll the objects created during the migration.\nThe target network of the migration.\nThe dependencies of the generated packages for native …\nEvict the objects with the specified ids\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet <code>iota_types::gas_coin::GasCoin</code> objects created during …\nGet <code>TimeLock</code> objects created during the migration together …\nGet <code>TimeLock</code> objects created during the migration together …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if inner is empty.\nReturns the <code>TransactionDigest</code> for the migration to the …\nTry to setup the migration process by creating the inner …\nRun all stages of the migration.\nTake the inner migration objects.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe <code>verification</code> module contains the validation logic to …\nVerify the ledger state represented by the objects in …\nDefines objects that may have been created by migrating an …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe <code>package_builder</code> module provides functions for building …\nThe <code>package_data</code> module provides the <code>NativeTokenPackageData</code>…\nBuilds and compiles a Stardust native token package.\nThe <code>NativeTokenModuleData</code> struct encapsulates all the data …\nThe <code>NativeTokenPackageData</code> struct encapsulates all the …\nThis must be a valid UTF-8 string.\nThis must be a valid UTF-8 string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the native token module data.\nCreates a new <code>NativeTokenPackageData</code> instance.\nCreates a new <code>NativeTokenModuleData</code> instance.\nReturns the Move.toml manifest.\nThis must be a valid ASCII string.\nParse a Hornet genesis snapshot using a <code>BufReader</code> …\nReturns the argument unchanged.\nThe full-snapshot header\nCalls <code>U::from(self)</code>.\nCreates a new <code>HornetSnapshotParser</code>.\nProvide an iterator over the Stardust UTXOs recorded in …\nGet the bytes of the solid entry points.\nProvide the target milestone timestamp extracted from the …\nProvide the network main token total supply through the …\nType representing output header for a Stardust snapshot.\nVerification type for output indexes that confines the …\nTypes representing token schemes in Stardust.\nThe length of the header in bytes\nThe header of an <code>Output</code> in the snapshot\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe length of the output in bytes.\nGet the milestone index\nGet the milestone timestamp in Unix time\nCreates a new OutputHeader for testing.\nUnpacks this value from a type that implements [<code>AsRef&lt;[u8]&gt;</code>…\nUnpacks this value from a type that implements [<code>AsRef&lt;[u8]&gt;</code>…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerates a random, valid output index in the range […\nGenerates a random, valid output index in the range […\nDelta is a snapshot which contains solely diffs of …\nFull is a snapshot which contains the full ledger entry …\nDescribes a snapshot header specific to full snapshots.\nThe length of the header in bytes\nThe kind of a snapshot.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the genesis milestone index of a <code>FullSnapshotHeader</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the ledger milestone index of a <code>FullSnapshotHeader</code>.\nReturns the milestone diff count of a <code>FullSnapshotHeader</code>.\nReturns the output count of a <code>FullSnapshotHeader</code>.\nReturns the parameters milestone option of a …\nReturns the SEP count of a <code>FullSnapshotHeader</code>.\nReturns the target milestone ID of a <code>FullSnapshotHeader</code>.\nReturns the target milestone index of a <code>FullSnapshotHeader</code>.\nReturns the target milestone timestamp of a …\nReturns the treasury output amount of a <code>FullSnapshotHeader</code>.\nReturns the treasury output milestone ID of a …\nUnpacks this value from a type that implements [<code>AsRef&lt;[u8]&gt;</code>…\nUnpacks this value from a type that implements [<code>AsRef&lt;[u8]&gt;</code>…\nUnpacks this value from a type that implements [<code>AsRef&lt;[u8]&gt;</code>…\nUnpacks this value from a type that implements [<code>AsRef&lt;[u8]&gt;</code>…\nThe maximum allowed u64 supply.\nThis struct represents a conversion from a …\nConstrain U256 tokens to a u64 using the token adjustment …\nThe circulating supply of tokens controlled by a foundry.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe maximum supply of tokens controlled by a foundry.\nThe ratio that the original circulating_supply (U256) was …\nPublicly known information about a validator\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrimary address used for consensus-related inter-node …")